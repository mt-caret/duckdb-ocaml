name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        ocaml-compiler:
          - 5.3.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install dependencies
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            # Install macOS-specific dependencies if needed
            brew install ninja
            # Add pkg-config to resolve core_unix dependencies
            brew install pkg-config
            # Set environment variables for macOS socket handling
            echo "CFLAGS=-DSO_NOSIGPIPE=1 -DJSC_SO_NOSIGPIPE" >> $GITHUB_ENV
            echo "Set CFLAGS for macOS in GITHUB_ENV"
            # Create a wrapper script for C compiler to ensure flags are passed
            echo '#!/bin/bash' > cc_wrapper.sh
            echo 'cc $@ -DSO_NOSIGPIPE=1 -DJSC_SO_NOSIGPIPE' >> cc_wrapper.sh
            chmod +x cc_wrapper.sh
            echo "CC=$PWD/cc_wrapper.sh" >> $GITHUB_ENV
            echo "Created C compiler wrapper with socket flags"
          fi
          opam install . --deps-only --with-test

      - name: Install ocamlformat
        run: opam install ocamlformat

      - name: Check formatting
        run: opam exec -- dune build @fmt

      - name: Build
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            CFLAGS="-DSO_NOSIGPIPE=1 -DJSC_SO_NOSIGPIPE" opam exec -- dune build @default
          else
            opam exec -- dune build @default
          fi

      - name: Check for uncommitted changes after build
        run: |
          git diff --exit-code || (echo "Error: Build produced uncommitted changes. Run 'dune build @default' locally and commit the changes." && exit 1)

      - name: Run tests
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            CFLAGS="-DSO_NOSIGPIPE=1 -DJSC_SO_NOSIGPIPE" opam exec -- dune build @runtest
          else
            opam exec -- dune build @runtest
          fi
